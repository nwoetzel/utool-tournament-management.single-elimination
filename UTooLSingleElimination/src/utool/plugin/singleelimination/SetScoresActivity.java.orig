package utool.plugin.singleelimination;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import utool.plugin.activity.AbstractPluginCommonActivity;

/**
 * 
 * Activity for the set scores screen.
 * 
 * @author hoguet
 * 1-7-12 
 *
 */
public class SetScoresActivity extends AbstractPluginCommonActivity{

	/**
	 * The tournament associated with this activity; the one that contains the matchup whose scores are being set
	 */
	private SingleEliminationTournament tournament;
	
	/**
	 * The matchup associated with this activity; the one whose scores are being set
	 */
	private Matchup matchup;
	
	/**
	 * 
	 */
	private TextView timerLabel;
	
	@Override
	public void onCreate(Bundle savedInstanceState) 
	{
		super.onCreate(savedInstanceState);
		
        requestWindowFeature(Window.FEATURE_CUSTOM_TITLE);
		setContentView(R.layout.activity_set_scores);
		getWindow().setFeatureInt(Window.FEATURE_CUSTOM_TITLE, R.layout.window_title);
		
		TextView titleLabel = (TextView) findViewById(R.id.title);
		titleLabel.setText("Single Elimination");

		//Initialize the associated tournament and matchup of this scores dialog
		tournament = (SingleEliminationTournament)TournamentLogic.getInstance(getTournamentId());
		long mid = getIntent().getExtras().getLong("matchup_id");
		for(Matchup m : tournament.getMatchups()){
			if(m.getId() == mid){
				matchup = m;
				break;
			}
		}
		
		//Set round/match label
		TextView roundMatchLabel = (TextView) findViewById(R.id.ss_roundMatchLabel);
		roundMatchLabel.setText("Round "+tournament.getRound()+" : Match "+matchup.getId());
		
		//Set timer label
		timerLabel = (TextView) findViewById(R.id.timerLabel);
		timerLabel.setText("~");
		MatchupsActivity.timerDisplays.add(timerLabel);

		//Set player one label and portrait
		TextView playerOneLabel = (TextView) findViewById(R.id.playerOneLabel);

		String playerOneString = "null1";
		if(matchup.getPlayerOne() != null){
			playerOneString = matchup.getPlayerOne().getName();

			if(matchup.getPlayerOne().getPortrait(this) != null){
				ImageView playerOneImage = (ImageView) findViewById(R.id.playerOneImage);
				playerOneImage.setImageDrawable(matchup.getPlayerOne().getPortrait(this));
			}
		}

		playerOneLabel.setText(playerOneString);

		//Set player two label and portrait
		TextView playerTwoLabel = (TextView) findViewById(R.id.playerTwoLabel);

		String playerTwoString = "null2";
		if(matchup.getPlayerTwo() != null){
			playerTwoString = matchup.getPlayerTwo().getName();
			
			if(matchup.getPlayerTwo().getPortrait(this) != null){
				ImageView playerTwoImage = (ImageView) findViewById(R.id.playerTwoImage);
				playerTwoImage.setImageDrawable(matchup.getPlayerTwo().getPortrait(this));
			}
		}

		playerTwoLabel.setText(playerTwoString);
		
		//Initialize score fields to current score or zeros if null		
		double scoreOne = 0;
		double scoreTwo = 0;
		if(matchup.getScores() != null){
			scoreOne = matchup.getScores()[0];
			scoreTwo = matchup.getScores()[1];
		}
		
		EditText playerOneEdit = (EditText) findViewById(R.id.playerOneScoreField);
		playerOneEdit.setText(""+scoreOne);
		
		EditText playerTwoEdit = (EditText) findViewById(R.id.playerTwoScoreField);
		playerTwoEdit.setText(""+scoreTwo);
		
		
		//Define Player 1 +/- functions
		Button playerOnePlus = (Button) findViewById(R.id.playerOnePlusBtn);
		playerOnePlus.setOnClickListener(new OnClickListener(){

			public void onClick(View v) {
				EditText playerOneEdit = (EditText) findViewById(R.id.playerOneScoreField);
				playerOneEdit.setText(""+(Double.parseDouble(playerOneEdit.getText().toString()) + 1));			
			}			
			
		});
		
		Button playerOneMinus = (Button) findViewById(R.id.playerOneMinusBtn);
		playerOneMinus.setOnClickListener(new OnClickListener(){

			public void onClick(View v) {
				EditText playerOneEdit = (EditText) findViewById(R.id.playerOneScoreField);
				playerOneEdit.setText(""+(Double.parseDouble(playerOneEdit.getText().toString()) - 1));	
			}			
			
		});
		
		//Define Player 2 +/- functions
		Button playerTwoPlus = (Button) findViewById(R.id.playerTwoPlusBtn);
		playerTwoPlus.setOnClickListener(new OnClickListener(){

			public void onClick(View v) {
				EditText playerTwoEdit = (EditText) findViewById(R.id.playerTwoScoreField);
				playerTwoEdit.setText(""+(Double.parseDouble(playerTwoEdit.getText().toString()) + 1));		
			}			
			
		});
		
		Button playerTwoMinus = (Button) findViewById(R.id.playerTwoMinusBtn);
		playerTwoMinus.setOnClickListener(new OnClickListener(){

			public void onClick(View v) {
				EditText playerTwoEdit = (EditText) findViewById(R.id.playerTwoScoreField);
				playerTwoEdit.setText(""+(Double.parseDouble(playerTwoEdit.getText().toString()) - 1));		
			}			
			
		});
		
		//Define save button
		Button saveBtn = (Button) findViewById(R.id.saveBtn);
		saveBtn.setOnClickListener(new OnClickListener(){
			
			public void onClick(View v){
				EditText playerOneEdit = (EditText) findViewById(R.id.playerOneScoreField);
				double scoreOne = Double.parseDouble(playerOneEdit.getText().toString());	
				
				EditText playerTwoEdit = (EditText) findViewById(R.id.playerTwoScoreField);
				double scoreTwo = Double.parseDouble(playerTwoEdit.getText().toString());	
				
				matchup.setScores(scoreOne, scoreTwo);
				
				MatchupsActivity.timerDisplays.remove(timerLabel);
				finish();
			}
			
		});
		
		//Define cancel button
		Button cancelBtn = (Button) findViewById(R.id.cancelBtn);
		cancelBtn.setOnClickListener(new OnClickListener(){
			
				public void onClick(View v){
					MatchupsActivity.timerDisplays.remove(timerLabel);
					finish();
				}
		});
			

	}
	

}
